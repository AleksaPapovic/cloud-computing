apiVersion: apps/v1
kind: Deployment
metadata:
  name: biblioteka-bg-deployment
  labels:
    app: biblioteka-bg-deployment
spec:
  selector:
    matchLabels:
      app: biblioteka-bg-deployment
  replicas: 1
  template:
    metadata:
      labels:
        app: biblioteka-bg-deployment
    spec:
      containers:
        - name: mdb
          image: postgres
          env:
            - name: POSTGRES_USER
              value: "postgres"
            - name: POSTGRES_PASSWORD
              value: "bibliotekabg123"
          ports:
            - containerPort: 5432
          volumeMounts:
            - name: init-script
              mountPath: /docker-entrypoint-initdb.d
            - name: bgdb-storage
              mountPath: /var/lib/postgresql/data
              subPath: postgres
        - name: biblioteka-bg
          image: aleksapapovic/biblioteka_ek:latest
          imagePullPolicy: Always
          env:
            - name: ASPNETCORE_ENVIRONMENT
              value: "Development"
            - name: ASPNETCORE_HTTP_PORTS
              value: "8080"
            # - name: ASPNETCORE_HTTPS_PORTS
            #   value: "8081"
            - name: CONNECTION
              value: "bgdb-k8"
          ports:
            - containerPort: 8080
            # - containerPort: 8081
          # volumeMounts:
          #   - name: user-secrets
          #     mountPath: /home/app/.microsoft/usersecrets
          #     readOnly: true
          #   - name: aspnet-https
          #     mountPath: /home/app/.aspnet/https
          #     readOnly: true

      volumes:
        - name: bgdb-storage
          persistentVolumeClaim:
            claimName: bgdb-pvc
        - name: init-script
          configMap:
            name: bgdb-init-script
        # - name: user-secrets
        #   hostPath:
        #     path: C:/Users/papov/AppData/Roaming/Microsoft/UserSecrets
        # - name: aspnet-https
        #   hostPath:
        #     path: C:/Users/papov/AppData/Roaming/ASP.NET/Https
---
apiVersion: v1
kind: Service
metadata:
  name: bgdb
  labels:
    app: bgdb
spec:
  # type: ClusterIP
  selector:
    app: biblioteka-bg-deployment
  ports:
    - name: http
      port: 9020
      targetPort: 8080
    # - name: https
    #   port: 8081
    #   targetPort: 9021
    # - name: db
    #   port: 5432
    #   targetPort: 5432
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: bgdb-init-script
data:
  init-db.sh: "set -e; psql -v ON_ERROR_STOP=1 <<-EOSQL    CREATE DATABASE mdb;EOSQL"
